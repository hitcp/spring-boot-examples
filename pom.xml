<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- FIXME starter-parent中已经声明，新建项目还是默认5没用，待测试 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.6</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.microframework</groupId>
    <artifactId>spring-boot-examples</artifactId>
    <version>1.0.0</version>
    <!-- 有子模块后必须打包类型必须选择pom -->
    <packaging>pom</packaging>

    <!-- 以下为Maven生成文档使用 -->
    <!-- 项目的名称 -->
    <name>Spring Boot Examples ${project.version}</name>
    <description>Top Spring Boot Examples project pom.xml file</description>
    <url>https://spring-boot-examples.hitcp.cn</url>

    <!-- 项目构建前提条件 -->
    <prerequisites>
        <!-- 构建该项目的Maven最低版本 -->
        <maven>${maven-compiler-plugin.version}</maven>
    </prerequisites>

    <!-- 子工程模块 -->
    <modules>
        <module>spring-boot-core-examples</module>
        <module>spring-boot-java8-examples</module>
        <module>spring-boot-algorithm-examples</module>
        <module>spring-boot-cache-examples</module>
        <module>spring-boot-jms-examples</module>
        <module>spring-boot-jdbc-examples</module>
        <module>spring-boot-orm-examples</module>
        <module>spring-boot-web-example</module>
        <module>spring-cloud-alibaba-examples</module>
    </modules>

    <properties>
        <rversion>1.0.0</rversion>
        <java.version>1.8</java.version>
        <!-- spring-boot-starter-parent  TODO starter-parent中已经声明，新建项目语言等级还是默认jdk5。没用，待测试 -->
        <!-- maven compiler settings properties : 指定Language Level防止每次自动重置Language Level，不用写build插件如果会自动读取maven.compiler.source、maven.compiler.target这两个属性 -->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!--<spring-boot.version>2.7.3</spring-boot.version>-->
        <!-- 与spring-boot版本统一 -->
        <!--
        <spring-boot-starter-webflux.version>2.7.3</spring-boot-starter-webflux.version>
        <spring-boot-starter-data-elasticsearch.version>2.7.3</spring-boot-starter-data-elasticsearch.version>
        <spring-boot-starter-data-redis.version>2.7.3</spring-boot-starter-data-redis.version>
        <spring-boot-starter-data-jpa.version>2.7.3</spring-boot-starter-data-jpa.version>
        -->
        <!--<mysql-connector.version>8.0.16</mysql-connector.version>-->
        <elasticsearch.searchbox.jest.version>5.3.3</elasticsearch.searchbox.jest.version>
        <mybatis.version>3.5.7</mybatis.version>
        <!--<apache-commons-lang3.version>3.12.0</apache-commons-lang3.version>-->
        <!--<redis-client-jedis.version>4.1.0</redis-client-jedis.version>-->
        <redis-lock-redisson.version>3.17.6</redis-lock-redisson.version>
        <google-guava.version>27.1-jre</google-guava.version>
        <alibaba-fastjson.version>1.2.58</alibaba-fastjson.version>
        <caucho-hessian.version>4.0.66</caucho-hessian.version>
        <!-- plugin version -->
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <apache-tomcat.version>10.1.2</apache-tomcat.version>
        <apache-rocketmq.version>2.0.1</apache-rocketmq.version>
        <apache-kafka.version>3.3.1</apache-kafka.version>
        <spring-cloud.version>2021.0.5</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.1</spring-cloud-alibaba.version>
    </properties>

    <!-- 版本仲裁 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--<dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-undertow</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jetty</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-reactor-netty</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-cache</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            &lt;!&ndash; 接口层入参校验 &ndash;&gt;
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
                <scope>runtime</scope>
            </dependency>-->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>io.searchbox</groupId>
                <artifactId>jest</artifactId>
                <version>${elasticsearch.searchbox.jest.version}</version>
            </dependency>
<!--            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache-commons-lang3.version}</version>
            </dependency>-->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google-guava.version}</version>
            </dependency>
<!--            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${redis-client-jedis.version}</version>
            </dependency>-->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redis-lock-redisson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${alibaba-fastjson.version}</version>
            </dependency>
            <!-- 序列化 -->
            <dependency>
                <groupId>com.caucho</groupId>
                <artifactId>hessian</artifactId>
                <version>${caucho-hessian.version}</version>
            </dependency>
            <!-- RocketMQ -->
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-spring-boot-starter</artifactId>
                <version>${apache-rocketmq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.13</artifactId>
                <version>${apache-kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-gateway</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-sentinel-gateway</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-seata</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>