<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.6</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.microframework</groupId>
    <artifactId>spring-boot-examples</artifactId>
    <!--<version>${revision}</version>-->
    <version>1.0.0</version>
    <!-- 有子模块后必须打包类型必须选择pom -->
    <packaging>pom</packaging>

    <!-- 以下为Maven生成文档使用 -->
    <!-- 项目的名称 -->
    <name>Spring Boot Examples ${project.version}</name>
    <description>Top Spring Boot Examples project pom.xml file</description>
    <url>https://spring-boot-examples.hitcp.cn</url>

    <!-- 项目构建前提条件 -->
    <prerequisites>
        <!-- 构建该项目的Maven最低版本 -->
        <maven>${maven-compiler-plugin.version}</maven>
    </prerequisites>

    <!-- 子模块管理 -->
    <modules>
        <module>spring-boot-core-examples</module>
        <module>spring-boot-java8-examples</module>
        <module>spring-boot-algorithm-examples</module>
        <module>spring-boot-cache-examples</module>
        <module>spring-boot-mybatis</module>
        <module>spring-boot-mybatis-plus</module>
        <module>spring-boot-web-examples</module>
        <module>spring-cloud-alibaba-examples</module>
        <module>spring-cloud-examples</module>
    </modules>

    <properties>
        <revision>1.0.0</revision>
<!--        <java.version>1.8</java.version>-->
        <!-- spring-boot-starter-parent  TODO starter-parent中已经声明，新建项目语言等级还是默认jdk5。没用，待测试 -->
        <!-- maven compiler settings properties : 指定Language Level防止每次自动重置Language Level，不用写build插件如果会自动读取maven.compiler.source、maven.compiler.target这两个属性 -->
<!--        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>-->

        <!-- Spring依赖-->
        <spring-cloud.version>2022.0.0</spring-cloud.version>
        <spring-cloud-alibaba.version>2022.0.0.0-RC1</spring-cloud-alibaba.version>

        <!-- Apache依赖 -->
        <apache-kafka.version>3.3.1</apache-kafka.version>
        <apache-rocketmq.version>2.0.1</apache-rocketmq.version>
        <apache-zookeeper.version>3.8.0</apache-zookeeper.version>
        <apache-poi.version>4.1.2</apache-poi.version>
        <apache-pdfbox.version>3.0.0-RC1</apache-pdfbox.version>
        <apache-curator.version>5.4.0</apache-curator.version>

        <!-- maven插件依赖 -->
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <maven-flatten-version>1.1.0</maven-flatten-version>

        <!-- 其他三方库依赖-->
        <mybatis.version>3.5.7</mybatis.version>
        <redisson.version>3.17.6</redisson.version>
        <alibaba-fastjson.version>1.2.58</alibaba-fastjson.version>
        <google-guava.version>27.1-jre</google-guava.version>
        <google-protobuf.version>3.21.10</google-protobuf.version>
        <caucho-hessian.version>4.0.66</caucho-hessian.version>
        <searchbox-jest.version>5.3.3</searchbox-jest.version>
    </properties>

    <!-- 版本仲裁 -->
    <dependencyManagement>
        <dependencies>
            <!-- Spring依赖-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Apache依赖 -->
            <!-- Kafka -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.13</artifactId>
                <version>${apache-kafka.version}</version>
            </dependency>
            <!-- RocketMQ -->
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-spring-boot-starter</artifactId>
                <version>${apache-rocketmq.version}</version>
            </dependency>
            <!-- Zookeeper -->
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${apache-zookeeper.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${apache-poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.pdfbox</groupId>
                <artifactId>pdfbox</artifactId>
                <version>${apache-pdfbox.version}</version>
            </dependency>

            <!-- 其他三方库依赖-->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${alibaba-fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google-guava.version}</version>
            </dependency>
            <!-- protobuf序列化 -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${google-protobuf.version}</version>
            </dependency>
            <!-- hessian序列化 -->
            <dependency>
                <groupId>com.caucho</groupId>
                <artifactId>hessian</artifactId>
                <version>${caucho-hessian.version}</version>
            </dependency>
            <dependency>
                <groupId>io.searchbox</groupId>
                <artifactId>jest</artifactId>
                <version>${searchbox-jest.version}</version>
            </dependency>


            <!-- ZK -->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${apache-curator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${apache-curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-x-discovery</artifactId>
                <version>${apache-curator.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- 全局排除log4j -->
<!--        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>-->

        <dependency>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>3.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
    </dependencies>

    <build>
        <!--<defaultGoal>clean install spring-boot:run</defaultGoal>-->
        <!-- 插件管理 -->
        <plugins>
            <!-- TODO 删除 -->
<!--            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>-->
            <!-- 子工程版本管理：父项目的revision占位符，所有的子项目，都能直接应用到 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${maven-flatten-version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    <pomElements>
                        <dependencies>expand</dependencies>
                    </pomElements>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>